% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MST.R
\name{two.stage.mst.defunct}
\alias{two.stage.mst.defunct}
\title{Defunct Two stage minimum spanning tree generation}
\usage{
two.stage.mst.defunct(obs_mat, tr_ind, mst_sub = NULL)
}
\arguments{
\item{obs_mat}{Covariate matrix}

\item{tr_ind}{Vector of indices of the observations that will be used as
training data}

\item{mst_sub}{Vector of indices which indicate the variables of `obs_mat`
to use to construct the minimum spanning tree}
}
\value{
A list of two `igraph` objects; the minimum spanning tree induced
subgraph of the training data and the two stage minimum spanning tree
induced subgraph obtained by adding the validation data.
}
\description{
Generation of a two stage minimum spanning tree induced
subgraph using the covariate matrix provided and an indictor of which rows
are to be used as training data.

Used in UNCOVER to generate the initial graph for the algorithm if the
pruning method involves validation data.
}
\details{
A minimum spanning tree is first constructed on the training data,
these edges are then fixed. Validation data is then added in the second
stage and we continue with Prim's algorithm of constructing a minimum
spanning tree (given the current edges) until all observations are
connected.
}
\examples{

# First we generate a covariate matrix `obs_mat` and assign observations as
# training data or validation data
CM <- matrix(rnorm(300),100,3)
ti <- sort(sample(1:100,50))

# Assuming we require a two stage minimum spanning tree induced subgraph
# using all variables
tsm <- two.stage.mst.defunct(obs_mat = CM,tr_ind = ti)

# The edges from the first graph should also be present in the second graph
E(tsm[[1]])
E(tsm[[2]])

# If we only require the two stage minimum spanning tree to be constructed
# from the first two variables
tsm.2 <- two.stage.mst.defunct(obs_mat = CM,tr_ind = ti,mst_sub = 1:2)
E(tsm.2[[1]])
E(tsm.2[[2]])

}
\keyword{minimum}
\keyword{spanning}
\keyword{tree}
