% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Reforest.R
\name{reforest.noc}
\alias{reforest.noc}
\title{Reintroducing edges to a graph to reduce the number of clusters to the maximal amount specified}
\usage{
reforest.noc(
  obs,
  res,
  gra,
  lbe,
  eps,
  K_dag,
  clu_al = NULL,
  c_s = NULL,
  est_method = "SMC_BIC",
  est_thres = Inf,
  par_no = 0,
  rfun = NULL,
  pdf_fun = NULL,
  p_p = F,
  rho = NULL
)
}
\arguments{
\item{obs}{Covariate matrix}

\item{res}{Binary response vector}

\item{gra}{`igraph` object which contains the information of the graph of the current model}

\item{lbe}{A vector detailing the log Bayesian evidences of all the sub-models defined by the separated components of `gra`}

\item{eps}{A 2-column matrix of edges previously removed. Rows correspond to edges and edges should be expressed as the two vertices the edge connects.}

\item{K_dag}{The maximum number of clusters allowed in the final output}

\item{clu_al}{A vector detailing the cluster allocation of each observation. If not specified the function will generate this vector.}

\item{c_s}{A list of length `nrow(eps)`. See details more information. Does not need to be specified.}

\item{est_method}{Method to be used to estimate the log Bayesian evidence of the newly formed sub-models, can be one of `"SMC"`,`"SMC_BIC"` or `"BIC"`}

\item{est_thres}{The threshold for which the number of observations needs to exceed to consider using BIC as an estimator. Only applies if method `"SMC_BIC"` is selected. Defaults to `Inf` if not specified.}

\item{par_no}{Number of samples of the prior used for the SMC sampler. Not required if method `"BIC"` selected.}

\item{rfun}{Function to sample from the prior. Must only have two arguments, `p_n` and `di` (Number of prior samples to generate and the number of dimensions of a single sample respectively).}

\item{pdf_fun}{Probability Density Function of the prior. Must only have two arguments, `th` and `di` (a vector or matrix of regression coefficients samples and the number of dimensions of a single sample respectively).}

\item{p_p}{Do you want to plot the output of the clustering each time an edge is reintroduced?}

\item{rho}{Only applies if `p_p` is `TRUE`. A vector specifying which variables of the covariate matrix to plot.}
}
\value{
A list consisting of; the cluster allocation vector of the new model, the resulting Bayesian evidence vector for the new model, an `igraph` object containing information on the new graph, the number of clusters in the model and the edges that have been removed from the graph to achieve this model.
}
\description{
Adds edges to the graph to reduce the number of clusters until the criteria is met and it is no longer beneficial to reintroduce any more edges. This is done in a greedy manner to optimise the log Bayesian evidence of the resulting models.

Used in UNCOVER if the reforest condition is set to "NoC".
}
\details{
Requires a minimum spanning forest graph which defines components for a multiplicative Bayesian logistic regression model, and the edges removed to achieve this graph.

For each edge previously removed the log Bayesian evidence `lbe` is estimated for the model obtained by reintroducing said edge. The optimal edge of this group is then selected and if this either showcases an improvement on the current model or the number of clusters in the current model exceeds the maximum number of clusters allowed then we reintroduce this edge to the graph and update the model. If added the remaining edges are then reconsidered and this process is repeated until either; the criterion is met and it is not beneficial to add anymore edges to the graph or there are no longer any edges to reintroduce.

If the vertices of graph `gra` are specifically named then elements of the matrix `eps` should not be numeric and instead be the names of the vertices involved.

If the clusters specified by the initial model have fixed labels then this should be specified by `clu_al`. `clu_al` must be a one of the possible labelling of the observations defined by the clusters of the graph. For example for a graph where there is only one connected component, if `clu_al` is specified it cannot be anything other than `rep(1,length(res)`.

`c_s` allows the user to specify information about the edges removed. For example if `c_s` is specified it must be of the form of list with each element representing information on the reintroduction of an edge. The index of this list corresponds to the index of the edges in `eps`. Furthermore, each element of the list will itself be a list of two elements, the first being the indices of the observations combined by introducing this edge and the second being the sub log Bayesian evidence of the cluster formed through this edge reintroduction. `c_s` is intended to be used to reduce computation time, and so whilst incorrect information on the observations involved in particular lists of `c_s` will not produce incorrect results, it will not have the desired time saving effect.

For more details on the specifics of the possible values for `est_method`, see the help page of the function `lbe.gen`.
}
\examples{

# First we generate a covariate matrix `obs` and binary response vector `res`
CM <- matrix(rnorm(20),10,2)
rv <- sample(0:1,10,replace=T)

# We then generate the minimum spanning tree graph from CM
gra_CM <- one.stage.mst(obs = CM)
plot(gra_CM,layout=CM)

# If we assume the prior for the regression coefficients is a standard normal
pr_samp <- function(p_n,di){return(rmvn(p_n,rep(0,di),diag(di)))}
pr_fun <- function(th,di){return(dmvn(th,mu=rep(0,di),sigma=diag(di)))}

# Then we can generate the log Bayesian evidence for this one component model
lZ <- lbe.gen(method = "SMC_BIC",obs_mat = CM,res_vec = rv,p_num = 500, rpri = pr_samp, p_pdf = pr_fun)
lZ

# If we wished to remove the first edge in the graph we would have
er <- remove.edge(gra = gra_CM, j = 1, lbe = lZ, obs = CM, res = rv, est_method = "SMC_BIC", par_no = 500, rfun = pr_samp, pdf_fun = pr_fun)
clu_al.2 <- er[[1]]
lZ.2 <- er[[2]]
gra_CM.2 <- er[[3]]
plot(gra_CM.2,layout=CM)
lZ.2
sum(lZ.2)

# If we then wanted to remove the first edge of the newly formed graph gra_CM.2 we would have
er.2 <- remove.edge(gra = gra_CM.2, j = 1, clu_al = clu_al.2, lbe = lZ.2, obs = CM, res = rv, est_method = "SMC_BIC", par_no = 500, rfun = pr_samp, pdf_fun = pr_fun)
plot(er.2[[3]],layout=CM)
er.2[[2]]
sum(er.2[[2]])
}
\seealso{
[lbe.gen]
}
\keyword{number}
\keyword{reforest}
